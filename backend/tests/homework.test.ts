import {
  detectAIContent,
  evaluateModel,
  submitFeedback,
} from '../src/services/homework.service';
import fs from 'fs';
import path from 'path';

async function run() {
  const modelDir = path.resolve(__dirname, '../data');
  const modelFile = path.join(modelDir, 'homework_model.bin');
  if (!fs.existsSync(modelFile)) {
    fs.mkdirSync(modelDir, { recursive: true });
    const model = {
      weights: { chatgpt: 2.0, ai: 1.5 },
      bias: -1.0,
      threshold: 0.5,
    };
    fs.writeFileSync(modelFile, JSON.stringify(model));
  }

  const dataset = [
    { text: 'This is a regular homework submission.', label: false },
    { text: 'This text was generated by ChatGPT.', label: true },
    { text: 'Another human-written text.', label: false },
  ];
  const evalResult = await evaluateModel(dataset);
  if (evalResult.accuracy !== 1) {
    throw new Error(`Expected accuracy 1 but got ${evalResult.accuracy}`);
  }

  const feedbackFile = path.join(modelDir, 'homework_feedback.log');
  if (fs.existsSync(feedbackFile)) {
    fs.unlinkSync(feedbackFile);
  }

  await submitFeedback('This text was generated by ChatGPT.', false);
  if (!fs.existsSync(feedbackFile)) {
    throw new Error('Expected feedback log to be created');
  }
  const lines = fs.readFileSync(feedbackFile, 'utf8').trim().split('\n');
  if (lines.length !== 1) {
    throw new Error('Expected one feedback entry');
  }

  console.log('homework.test.ts passed');
}

run().catch((err) => {
  console.error(err);
  process.exit(1);
});
